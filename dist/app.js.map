{"version":3,"file":"app.js","mappings":"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","sources":["webpack://accessibility/./src/js/Config.js","webpack://accessibility/./src/js/CssProperty.js","webpack://accessibility/./src/js/CssReadGuideProperty.js","webpack://accessibility/./src/js/CssSelectProperty.js","webpack://accessibility/./src/js/CssSimpleProperty.js","webpack://accessibility/./src/js/CustomCursor.js","webpack://accessibility/./src/js/accessibility.js","webpack://accessibility/./src/js/utils.js","webpack://accessibility/webpack/bootstrap","webpack://accessibility/webpack/runtime/define property getters","webpack://accessibility/webpack/runtime/hasOwnProperty shorthand","webpack://accessibility/webpack/runtime/make namespace object"],"sourcesContent":["import { $ } from './utils';\r\n\r\nexport class Config {\r\n    static accessibilityPanel = $(\"#accessibilityPanel\");\r\n    static accessibilityStorageName = \"accessibility\";\r\n}","export class CssProperty {\r\n    #propertyName;\r\n\r\n    constructor(propertyName) {\r\n        this.#propertyName = propertyName;\r\n    }\r\n\r\n    getPropertyName() {\r\n        return this.#propertyName;\r\n    }\r\n\r\n    capitalizePrefix(words) {\r\n        return words[0] + words\r\n            .slice(1)\r\n            .map(word => word.charAt(0).toUpperCase() + word.slice(1))\r\n            .join('');\r\n    }\r\n}\r\n","import {$, capitalizeFirstLetter, saveAccessibilitySettings} from \"./utils\";\r\n\r\nexport class CssReadGuideProperty {\r\n    #height;\r\n    #backgroundColor;\r\n    #opacity;\r\n    #readGuideBottom;\r\n    #readGuideTop;\r\n\r\n    /**\r\n     * Crée une nouvelle instance de CssReadGuideProperty.\r\n     *\r\n     * @param {number} height - La hauteur du guide de lecture.\r\n     * @param {string} backgroundColor - La couleur de fond du guide de lecture au format hexadécimal (ex: \"#FFFFFF\").\r\n     * @param {number} opacity - L'opacité du guide de lecture (valeur entre 0 et 1).\r\n     */\r\n    constructor(height, backgroundColor, opacity) {\r\n        this.#height = height;\r\n        this.#opacity = opacity;\r\n        this.#backgroundColor = this.createBackgroundColor(backgroundColor);\r\n        this.#readGuideBottom = this.createReadGuide(\"bottom\");\r\n        this.#readGuideTop = this.createReadGuide(\"top\");\r\n        this.addEventMouse();\r\n    }\r\n\r\n    getReadGuideBottom() {\r\n        return this.#readGuideBottom;\r\n    }\r\n\r\n    getReadGuideTop() {\r\n        return this.#readGuideTop;\r\n    }\r\n\r\n    getHeight() {\r\n        return this.#height;\r\n    }\r\n\r\n    getBackgroundColor() {\r\n        return this.#backgroundColor;\r\n    }\r\n\r\n    getOpacity() {\r\n        return this.#opacity;\r\n    }\r\n\r\n    /**\r\n     * Crée la couleur de fond du guide de lecture au format RGBA.\r\n     *\r\n     * @param {string} backgroundColor - La couleur de fond au format hexadécimal (ex: \"#FFFFFF\").\r\n     * @returns {string} La couleur de fond au format RGBA.\r\n     */\r\n    createBackgroundColor(backgroundColor) {\r\n        const r = parseInt(backgroundColor.slice(1, 3), 16);\r\n        const g = parseInt(backgroundColor.slice(3, 5), 16);\r\n        const b = parseInt(backgroundColor.slice(5, 7), 16);\r\n        const hetToRGB = `${r}, ${g}, ${b}`;\r\n        return `rgba(${hetToRGB}, ${this.getOpacity()})`;\r\n    }\r\n\r\n    /**\r\n     * Crée un élément de guide de lecture.\r\n     *\r\n     * @param {string} type - Le type de guide de lecture (\"top\" ou \"bottom\").\r\n     * @returns {HTMLElement} L'élément de guide de lecture créé.\r\n     */\r\n    createReadGuide(type) {\r\n        let guideElement = document.createElement(\"div\");\r\n        guideElement.id = \"readGuide\" + capitalizeFirstLetter(type);\r\n        guideElement.style.position = \"fixed\";\r\n        guideElement.style.width = \"100%\";\r\n        guideElement.style.height = \"100%\";\r\n        guideElement.style.left = \"0\";\r\n        guideElement.style.backgroundColor = this.getBackgroundColor();\r\n        guideElement.style.display = \"block\";\r\n        guideElement.style.zIndex = \"9999\";\r\n        $(\"#readGuideContainer\").appendChild(guideElement);\r\n        return guideElement;\r\n    }\r\n\r\n    /**\r\n     * Ajoute un événement de clic sur le bouton \"readGuideButton\" pour afficher/masquer les guides de lecture.\r\n     */\r\n    addEventMouse() {\r\n        document.addEventListener(\"mousemove\", (event) => {\r\n            const middleHeight = this.getHeight() / 2;\r\n            this.getReadGuideBottom().style.top = `${event.clientY + this.getHeight() / 2}px`;\r\n            this.getReadGuideTop().style.bottom = `${window.innerHeight - event.clientY + this.getHeight() / 2}px`;\r\n        });\r\n    }\r\n\r\n    addEventListeners() {\r\n        $(\"#readGuideButton\").addEventListener(\"click\", () => {\r\n            const currentValue = document.documentElement.style.getPropertyValue(\"--read-guide-display\");\r\n            const newValue = currentValue === \"block\" ? \"none\" : \"block\";\r\n            document.documentElement.style.setProperty(\"--read-guide-display\", newValue);\r\n            saveAccessibilitySettings(\"boolean\", \"--read-guide-display\", newValue);\r\n        });\r\n    }\r\n}\r\n","import {CssProperty} from \"./CssProperty\";\r\nimport {$, saveAccessibilitySettings} from \"./utils\";\r\n\r\nexport class CssSelectProperty extends CssProperty {\r\n    #propertyStyle;\r\n    #valuesArray;\r\n    #propertySelect;\r\n\r\n    /**\r\n     * Constructeur de la classe CssSelectProperty.\r\n     *\r\n     * @param {string} propertyName - Le nom de la propriété CSS.\r\n     * @param {string} propertyStyle - Le style de la propriété CSS.\r\n     * @param {string[]} valueArray - Le tableau de valeurs de la propriété CSS.\r\n     */\r\n    constructor(propertyName, propertyStyle, valueArray,) {\r\n        super(propertyName)\r\n        this.#propertyStyle = propertyStyle;\r\n        this.#valuesArray = valueArray;\r\n        this.setCssPropertySelect(propertyName)\r\n    }\r\n\r\n    getPropertySelect() {\r\n        return this.#propertySelect;\r\n    }\r\n\r\n    setPropertySelect(value) {\r\n        this.#propertySelect = $(value);\r\n    }\r\n\r\n    getValuesArray() {\r\n        return this.#valuesArray;\r\n    }\r\n\r\n    getPropertyStyle() {\r\n        return this.#propertyStyle;\r\n    }\r\n\r\n    /**\r\n     * Définit la propriété CSS sélectionnée.\r\n     *\r\n     * @param {string} cssProperty - La propriété CSS complète.\r\n     */\r\n    setCssPropertySelect(cssProperty) {\r\n        const parts = cssProperty.split('-').slice(2);\r\n        const selectPrefix = this.capitalizePrefix(parts);\r\n        this.setPropertySelect(`#${selectPrefix}Select`);\r\n    }\r\n\r\n    /**\r\n     * Initialise l'événement 'change' sur le select de la famille de polices.\r\n     * Lorsque l'utilisateur sélectionne une nouvelle famille de polices :\r\n     * - La valeur du select est appliquée à sa propre police de caractères pour un aperçu en temps réel\r\n     * - La propriété CSS \"--font-family\" est mise à jour avec la nouvelle valeur\r\n     * - Les paramètres d'accessibilité sont enregistrés dans le localStorage avec la nouvelle famille de polices\r\n     */\r\n    initialize() {\r\n        this.getPropertySelect().addEventListener(\"change\", () => {\r\n            const selectedProperty = this.getPropertySelect().value;\r\n            this.getPropertySelect().style[this.getPropertyStyle()] = this.getPropertySelect().value;\r\n            document.documentElement.style.setProperty(this.getPropertyName(), selectedProperty);\r\n            saveAccessibilitySettings(\"select\", this.getPropertyName(), selectedProperty);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Crée les options du select de la famille de polices et sélectionne l'option correspondant\r\n     * à la valeur actuelle.\r\n     */\r\n    createPropertyOptions(settings) {\r\n        const currentValue = settings[this.getPropertyName()] || this.getValuesArray()[0];\r\n\r\n        // Supprimer les options existantes\r\n        this.getPropertySelect().innerHTML = \"\";\r\n\r\n        // Créer les options pour chaque famille de polices\r\n        this.getValuesArray().forEach(value => {\r\n            const option = document.createElement(\"option\");\r\n            option.value = value;\r\n            option.text = value;\r\n\r\n            if (value === currentValue) {\r\n                option.selected = true;\r\n            }\r\n            option.style[this.getPropertyStyle()] = value;\r\n            this.getPropertySelect().add(option);\r\n        });\r\n\r\n        this.getPropertySelect().style[this.getPropertyStyle()] = currentValue;\r\n    }\r\n}\r\n","import {CssProperty} from \"./CssProperty\";\r\nimport {$, saveAccessibilitySettings} from \"./utils\";\r\n\r\nexport class CssSimpleProperty extends CssProperty {\r\n    #value;\r\n    #unit;\r\n    #delayAnimation;\r\n    #classAnimation;\r\n    #decreaseButton;\r\n    #increaseButton;\r\n    #min;\r\n    #max;\r\n\r\n    /**\r\n     * Constructeur de la classe CssNumberProperty.\r\n     *\r\n     * @param {string} propertyName - Le nom de la propriété CSS (ex: \"my-custom-property\").\r\n     * @param {number} value - La valeur initiale de la propriété CSS.\r\n     * @param {string} [unit=px] - L'unité de la propriété CSS (par défaut : \"px\").\r\n     * @param {number} min - La valeur minimale.\r\n     * @param {string} max - La valeur maximale.\r\n     */\r\n    constructor(propertyName, value, unit = \"px\", min, max) {\r\n        super(propertyName);\r\n        this.#value = value;\r\n        this.#unit = unit;\r\n        this.#min = min;\r\n        this.#max = max;\r\n        this.setCssPropertyButtons(propertyName);\r\n        this.#delayAnimation = 300;\r\n        this.#classAnimation = \"animate\";\r\n        this.#initialize();\r\n    }\r\n\r\n    getValue() {\r\n        return this.#value;\r\n    }\r\n\r\n    getUnit() {\r\n        return this.#unit;\r\n    }\r\n\r\n    getDecreaseButton() {\r\n        return this.#decreaseButton;\r\n    }\r\n\r\n    setDecreaseButton(value) {\r\n        this.#decreaseButton = $(value);\r\n    }\r\n\r\n    getIncreaseButton() {\r\n        return this.#increaseButton;\r\n    }\r\n\r\n    setIncreaseButton(value) {\r\n        this.#increaseButton = $(value);\r\n    }\r\n\r\n    getDelayAnimation() {\r\n        return this.#delayAnimation;\r\n    }\r\n\r\n    getClassAnimation() {\r\n        return this.#classAnimation;\r\n    }\r\n\r\n    getMax() {\r\n        return this.#max;\r\n    }\r\n\r\n    getMin() {\r\n        return this.#min;\r\n    }\r\n\r\n    /**\r\n     * Définit les boutons d'augmentation et de diminution pour une propriété CSS.\r\n     *\r\n     * @param {string} cssProperty - La propriété CSS complète (ex: \"--my-custom-property-buttons\").\r\n     */\r\n    setCssPropertyButtons(cssProperty) {\r\n        const parts = cssProperty.split('-').slice(2);\r\n        const buttonPrefix = this.capitalizePrefix(parts)\r\n\r\n        this.setDecreaseButton(`#${buttonPrefix}DecreaseButton`);\r\n        this.setIncreaseButton(`#${buttonPrefix}IncreaseButton`);\r\n    }\r\n\r\n    /**\r\n     * Initialise l'ajustement de la propriété CSS.\r\n     * Ajoute des écouteurs d'événement \"click\" aux boutons de diminution et d'augmentation de la valeur.\r\n     */\r\n    #initialize() {\r\n        this.#addEventButton(this.getDecreaseButton(), -1 * this.getValue());\r\n        this.#addEventButton(this.getIncreaseButton(), this.getValue());\r\n    }\r\n\r\n    /**\r\n     * Ajoute un événement de clic à un élément et ajuste la racine du document en fonction de la valeur passée.\r\n     *\r\n     * @param {HTMLElement} element - L'élément auquel l'événement de clic doit être ajouté.\r\n     * @param {any} value - La valeur à utiliser pour ajuster la racine du document.\r\n     */\r\n    #addEventButton(element, value) {\r\n        element.addEventListener(\"click\", () => {\r\n            this.#adjustRoot(value);\r\n            element.classList.add(this.getClassAnimation());\r\n            setTimeout(() => {\r\n                element.classList.remove(this.getClassAnimation());\r\n            }, this.getDelayAnimation());\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Ajuste la valeur d'une propriété CSS sur l'élément racine (root) et enregistre les\r\n     * paramètres d'accessibilitédans le localStorage.\r\n     * @param {number} adjustmentValue - La valeur d'ajustement à ajouter à la propriété CSS.\r\n     */\r\n    #adjustRoot(adjustmentValue) {\r\n        const rootElement = document.documentElement;\r\n        const currentRootValue = parseFloat(getComputedStyle(rootElement)\r\n            .getPropertyValue(this.getPropertyName()));\r\n        let newPropertyValue = currentRootValue + adjustmentValue;\r\n\r\n        // Paramétrages\r\n        if (newPropertyValue >= this.getMax()) newPropertyValue = this.getMax();\r\n        if (newPropertyValue <= this.getMin()) newPropertyValue = this.getMin();\r\n\r\n        const newPropertyValueWithUnit = `${newPropertyValue}${this.getUnit()}`;\r\n        rootElement.style.setProperty(this.getPropertyName(), newPropertyValueWithUnit);\r\n        saveAccessibilitySettings(\"range\", this.getPropertyName(), newPropertyValueWithUnit);\r\n    }\r\n}\r\n","import {$, $All} from \"./utils\";\r\n\r\nexport class CustomCursor {\r\n    constructor() {\r\n        this.cursor = $('#cursor');\r\n        this.body = $(\"#cursor-body\");\r\n        this.allHandTargets = $All(\".cursor-pointer\");\r\n        this.allPenTargets = $All(\".cursor-text\");\r\n        this.color = '';\r\n    }\r\n\r\n    init(value) {\r\n        value = parseInt(value);\r\n        this.cursor.classList.remove(\"cursor-white\", \"cursor-black\");\r\n        this.color = [\"white\", \"black\"][value];\r\n\r\n        if (value === 0 || value === 1) {\r\n            this.setupCustomCursor();\r\n        } else {\r\n            this.resetToDefaultCursor();\r\n        }\r\n    }\r\n\r\n    setupCustomCursor() {\r\n        this.cursor.style.background = `url('./dist/img/cursor-hand-${this.color}.svg')`;\r\n        this.cursor.style.backgroundSize = \"100% 100%\";\r\n        this.cursor.classList.remove(\"cursor-hidden\");\r\n        this.cursor.classList.add(`cursor-${this.color}`);\r\n        this.body.style.cursor = \"none\";\r\n\r\n        this.addEventListeners();\r\n        this.addMouseMoveListener();\r\n        this.addScrollListener();\r\n    }\r\n\r\n    resetToDefaultCursor() {\r\n        this.body.style.cursor = \"auto\";\r\n        this.cursor.classList.add(\"cursor-hidden\");\r\n        this.removeEventListeners();\r\n        this.resetTargetCursors();\r\n    }\r\n\r\n    handleMouse(type) {\r\n        this.cursor.style.background = `url('./dist/img/cursor-${type}-${this.color}.svg')`;\r\n        this.cursor.style.backgroundSize = \"100% 100%\";\r\n    }\r\n\r\n    handleHandMouseEnter() { this.handleMouse(\"hand\"); }\r\n    handleMouseLeave() { this.handleMouse(\"arrow\"); }\r\n    handlePenMouseEnter() { this.handleMouse(\"pen\"); }\r\n\r\n    addEventListeners() {\r\n        this.addListenersToTargets(this.allHandTargets, this.handleHandMouseEnter.bind(this), this.handleMouseLeave.bind(this));\r\n        this.addListenersToTargets(this.allPenTargets, this.handlePenMouseEnter.bind(this), this.handleMouseLeave.bind(this));\r\n    }\r\n\r\n    addListenersToTargets(targets, enterHandler, leaveHandler) {\r\n        if (targets) {\r\n            targets.forEach(target => {\r\n                target.classList.add(\"cursor-none\");\r\n                target.addEventListener('mouseenter', enterHandler);\r\n                target.addEventListener('mouseleave', leaveHandler);\r\n            });\r\n        }\r\n    }\r\n\r\n    removeEventListeners() {\r\n        this.removeListenersFromTargets(this.allHandTargets);\r\n        this.removeListenersFromTargets(this.allPenTargets);\r\n    }\r\n\r\n    removeListenersFromTargets(targets) {\r\n        if (targets) {\r\n            targets.forEach(target => {\r\n                target.classList.remove(\"cursor-none\");\r\n            });\r\n        }\r\n    }\r\n\r\n    addMouseMoveListener() {\r\n        document.addEventListener('mousemove', (e) => {\r\n            if (this.cursor.style.background.includes(\"pen\")) {\r\n                this.cursor.style.transform = `translate(${e.clientX - 10}px, ${e.clientY - 43}px)`;\r\n            } else {\r\n                this.cursor.style.transform = `translate(${e.clientX - 10}px, ${e.clientY}px)`;\r\n            }\r\n        });\r\n    }\r\n\r\n    addScrollListener() {\r\n        document.addEventListener('scroll', () => {\r\n            this.handleMouseLeave();\r\n            const x = this.cursor.getBoundingClientRect().left + this.cursor.getBoundingClientRect().width / 2;\r\n            const y = this.cursor.getBoundingClientRect().top + this.cursor.getBoundingClientRect().height / 2;\r\n            const elementUnderMouse = document.elementFromPoint(x, y);\r\n\r\n            if (elementUnderMouse.classList.contains('cursor-pointer')) {\r\n                this.handleHandMouseEnter();\r\n            } else if (elementUnderMouse.classList.contains('cursor-text')) {\r\n                this.handlePenMouseEnter();\r\n            }\r\n        });\r\n    }\r\n\r\n    resetTargetCursors() {\r\n        this.resetCursorForTargets(this.allHandTargets);\r\n        this.resetCursorForTargets(this.allPenTargets);\r\n    }\r\n\r\n    resetCursorForTargets(targets) {\r\n        if (targets) {\r\n            targets.forEach(target => {\r\n                target.classList.remove(\"cursor-none\");\r\n            });\r\n        }\r\n    }\r\n}\r\n","import {Config} from \"./Config\";\r\nimport { $, $All, capitalizeFirstLetter, saveAccessibilitySettings} from \"./utils\";\r\nimport { CustomCursor} from \"./CustomCursor\";\r\nimport { CssSimpleProperty } from \"./CssSimpleProperty\";\r\nimport { CssSelectProperty } from \"./CssSelectProperty\";\r\nimport { CssReadGuideProperty } from \"./CssReadGuideProperty\";\r\n\r\n/*********************************************************************************\r\n * PARTIE CONSTANTES\r\n *********************************************************************************/\r\n\r\nconst CSS_SIMPLE_PROPERTIES = [\r\n    [\"--font-size-title\", 2, \"px\", 10, 45], // fontSizeTitle{In-Decrease}Button\r\n    [\"--font-size-text\", 2, \"px\", 10, 28],    // fontSizeText{In-Decrease}Button\r\n    [\"--line-height\", 0.1, \"\", 0.85, 2.5],       // lineHeight{In-Decrease}Button\r\n    [\"--letter-spacing\", 0.05, \"em\", -0.15, 0.7], // letterSpacing{In-Decrease}Button\r\n    [\"--word-spacing\", 0.1, \"em\", 0, 1],    // wordSpacing{In-Decrease}Button\r\n    [\"--margin\", 5, \"px\", 0, 45],            // margin{In-Decrease}Button\r\n    [\"--padding\", 5, \"px\", 0, 35],           // padding{In-Decrease}Button\r\n    [\"--border-radius\", 4, \"px\", 0, 50],     // borderRadius{In-Decrease}Button\r\n];\r\n\r\nconst CSS_COMPLEXE_PROPERTIES = [\r\n    [\"--background-color\", \"backgroundColor\", [\"#F8F9FA\", \"#F5C3C2\", \"#A7D2E8\", \"#FEF0C3\", \"#C1E1C1\", \"#E6E6FA\"]],\r\n    [\"--text-color\", \"color\", [\"#0c0c0c\", \"#720b0a\", \"#063c5a\", \"#695803\", \"#005602\", \"#4e4ef3\"]],\r\n    [\"--font-family\", \"fontFamily\", [\"Arial\", \"Verdana\", \"Georgia\", \"Courier New\", \"Roboto\", \"Ms Gothic\", \"Garamond\"]],\r\n    [\"--text-align\", \"textAlign\", [\"left\", \"right\", \"center\", \"justify\"]],];\r\n\r\n/*********************************************************************************\r\n * PARTIE INITIALISATION\r\n *********************************************************************************/\r\n\r\n/**\r\n * Crée des objets CssSelectProperty à partir d'une liste de propriétés.\r\n *\r\n * @param {Array} properties - Liste de propriétés à créer. Chaque propriété est un tableau contenant trois éléments :\r\n *   - Le premier élément est le nom de la propriété.\r\n *   - Le deuxième élément est la valeur par défaut de la propriété.\r\n *   - Le troisième élément est la description de la propriété.\r\n */\r\nfunction createCssSelectProperties(properties) {\r\n    properties.forEach(property => {\r\n        const selectProperty = new CssSelectProperty(property[0], property[1], property[2]);\r\n        selectProperty.initialize();\r\n        selectProperty.createPropertyOptions(property[1],);\r\n    });\r\n}\r\n\r\n/**\r\n * Crée des objets CssSimpleProperty à partir d'une liste de propriétés.\r\n *\r\n * @param {Array} properties - Liste de propriétés à créer. Chaque propriété est un tableau contenant trois éléments :\r\n *   - Le premier élément est le nom de la propriété.\r\n *   - Le deuxième élément est la valeur par défaut de la propriété.\r\n *   - Le troisième élément est la description de la propriété.\r\n */\r\nfunction createCssSimpleProperties(properties) {\r\n    properties.forEach(property => {\r\n        new CssSimpleProperty(property[0], property[1], property[2], property[3], property[4]);\r\n    });\r\n}\r\n\r\n/**\r\n * Lit les paramètres d'accessibilité depuis le localStorage et met à jour les styles en conséquence.\r\n * Si le panel de réglages de la famille de polices existe, il crée les options du select avec\r\n * la valeur actuelle sélectionnée.\r\n */\r\nfunction readAccessibilitySettings() {\r\n    const accessibilitySettings = JSON.parse(localStorage.getItem(Config.accessibilityStorageName)) || {};\r\n    let customCursor = new CustomCursor();\r\n\r\n    // Mettre à jour les variables CSS avec les valeurs enregistrées\r\n    for (const category in accessibilitySettings) {\r\n        for (const [property, value] of Object.entries(accessibilitySettings[category])) {\r\n            document.documentElement.style.setProperty(property, value);\r\n\r\n            if (property === \"--cursor-style\") {\r\n                customCursor.init(value); // où 'value' est 0, 1 ou une autre valeur\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    const read = new CssReadGuideProperty(100, \"#000000\", 0.6);\r\n\r\n    if (!Config.accessibilityPanel) return;\r\n\r\n    // Créer le comportement des propriétés css simple à valeur\r\n    createCssSimpleProperties(CSS_SIMPLE_PROPERTIES);\r\n\r\n    // Créer le comportement des selects\r\n    createCssSelectProperties(CSS_COMPLEXE_PROPERTIES);\r\n\r\n    // Créer le comportement du reset\r\n    $(\"#resetButton\").addEventListener(\"click\", () => {\r\n        localStorage.removeItem(Config.accessibilityStorageName);\r\n        location.reload();\r\n    });\r\n\r\n    // Ajouter un écouteur d'événement sur le changement de sélection\r\n    $(\"#cursorSelect\").addEventListener(\"change\", function () {\r\n        // Récupérer la valeur sélectionnée\r\n        const selectedValue = this.value;\r\n\r\n        // Faire quelque chose avec la valeur récupérée\r\n        console.log(\"Valeur sélectionnée :\", selectedValue);\r\n\r\n        // Appeler la fonction cursor avec la valeur récupérée\r\n        customCursor.init(selectedValue); // où 'value' est 0, 1 ou une autre valeur\r\n\r\n        saveAccessibilitySettings(\"range\", \"--cursor-style\", selectedValue);\r\n\r\n    });\r\n\r\n    read.addEventListeners();\r\n}\r\n\r\nreadAccessibilitySettings();\r\n","import {Config} from \"./Config\";\r\n\r\n/*********************************************************************************\r\n * PARTIE OUTILS\r\n *********************************************************************************/\r\n\r\n/**\r\n * Capitalise la première lettre d'une chaîne de caractères.\r\n *\r\n * @param {string} string - La chaîne de caractères à capitaliser.\r\n * @returns {string} La chaîne de caractères avec la première lettre capitalisée.\r\n */\r\nexport function capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\n/**\r\n * Fonction utilitaire pour sélectionner un élément du DOM.\r\n * @param {string} selector - Le sélecteur CSS de l'élément à sélectionner.\r\n * @returns {Element} L'élément correspondant au sélecteur.\r\n */\r\nexport function $(selector) {\r\n    return document.querySelector(selector);\r\n}\r\n\r\nexport function $All(selector) {\r\n    return document.querySelectorAll(selector);\r\n}\r\n\r\n/*********************************************************************************\r\n * PARTIE ENREGISTREMENT\r\n *********************************************************************************/\r\n\r\n/**\r\n * Enregistre les paramètres d'accessibilité dans le localStorage.\r\n * @param {string} cssCategory - La catégorie du paramètre (select, range, ou boolean).\r\n * @param {string} cssProperty - La propriété CSS à enregistrer.\r\n * @param {string|number|boolean} cssValue - La valeur de la propriété CSS à enregistrer.\r\n */\r\nexport function saveAccessibilitySettings(cssCategory, cssProperty, cssValue) {\r\n    const existingAccessibilitySettings = JSON.parse(localStorage.getItem(Config.accessibilityStorageName)) || {};\r\n    // Assurez-vous que la catégorie existe\r\n    if (!existingAccessibilitySettings[cssCategory]) {\r\n        existingAccessibilitySettings[cssCategory] = {};\r\n    }\r\n\r\n    // Enregistrez la valeur dans la catégorie appropriée\r\n    existingAccessibilitySettings[cssCategory][cssProperty] = cssValue;\r\n\r\n    // Sauvegardez les paramètres mis à jour\r\n    localStorage.setItem(Config.accessibilityStorageName, JSON.stringify(existingAccessibilitySettings));\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"names":["Config","_createClass","_classCallCheck","_defineProperty","$","CssProperty","propertyName","_classPrivateFieldInitSpec","_propertyName","this","key","value","words","slice","map","word","charAt","toUpperCase","join","_height","WeakMap","_backgroundColor","_opacity","_readGuideBottom","_readGuideTop","CssReadGuideProperty","height","backgroundColor","opacity","_classPrivateFieldSet","createBackgroundColor","createReadGuide","addEventMouse","_classPrivateFieldGet","r","parseInt","g","b","hetToRGB","concat","getOpacity","type","guideElement","document","createElement","id","capitalizeFirstLetter","style","position","width","left","getBackgroundColor","display","zIndex","appendChild","_this","addEventListener","event","getHeight","getReadGuideBottom","top","clientY","getReadGuideTop","bottom","window","innerHeight","newValue","documentElement","getPropertyValue","setProperty","saveAccessibilitySettings","_propertyStyle","_valuesArray","_propertySelect","CssSelectProperty","_CssProperty","propertyStyle","valueArray","_callSuper","setCssPropertySelect","_inherits","cssProperty","parts","split","selectPrefix","capitalizePrefix","setPropertySelect","_this2","getPropertySelect","selectedProperty","getPropertyStyle","getPropertyName","settings","_this3","currentValue","getValuesArray","innerHTML","forEach","option","text","selected","add","_value","_unit","_delayAnimation","_classAnimation","_decreaseButton","_increaseButton","_min","_max","_CssSimpleProperty_brand","WeakSet","CssSimpleProperty","unit","arguments","length","undefined","min","max","setCssPropertyButtons","_assertClassBrand","_initialize","call","buttonPrefix","setDecreaseButton","setIncreaseButton","_addEventButton","getDecreaseButton","getValue","getIncreaseButton","element","_adjustRoot","classList","getClassAnimation","setTimeout","remove","getDelayAnimation","adjustmentValue","rootElement","newPropertyValue","parseFloat","getComputedStyle","getMax","getMin","newPropertyValueWithUnit","getUnit","CustomCursor","cursor","body","allHandTargets","$All","allPenTargets","color","setupCustomCursor","resetToDefaultCursor","background","backgroundSize","addEventListeners","addMouseMoveListener","addScrollListener","removeEventListeners","resetTargetCursors","handleMouse","addListenersToTargets","handleHandMouseEnter","bind","handleMouseLeave","handlePenMouseEnter","targets","enterHandler","leaveHandler","target","removeListenersFromTargets","e","includes","transform","clientX","x","getBoundingClientRect","y","elementUnderMouse","elementFromPoint","contains","resetCursorForTargets","CSS_SIMPLE_PROPERTIES","CSS_COMPLEXE_PROPERTIES","accessibilitySettings","JSON","parse","localStorage","getItem","accessibilityStorageName","customCursor","category","_i","_Object$entries","Object","entries","_Object$entries$_i","_slicedToArray","property","init","read","accessibilityPanel","properties","selectProperty","initialize","createPropertyOptions","createCssSelectProperties","removeItem","location","reload","selectedValue","console","log","readAccessibilitySettings","string","selector","querySelector","querySelectorAll","cssCategory","cssValue","existingAccessibilitySettings","setItem","stringify","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","d","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag"],"sourceRoot":""}